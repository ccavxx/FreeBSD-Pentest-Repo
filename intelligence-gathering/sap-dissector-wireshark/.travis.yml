language: cpp

compiler:
  - clang
  - gcc

env:
  - WIRESHARK_BRANCH=master-2.0 BUILD_STANDALONE=no
  - WIRESHARK_BRANCH=master-2.0 BUILD_STANDALONE=yes


before_install:
  - if [ ${BUILD_STANDALONE} == "yes" ]; then sudo sudo add-apt-repository ppa:wireshark-dev/stable -y; fi

  - sudo apt-get update -qq

  - if [ ${BUILD_STANDALONE} == "yes" ]; then
        sudo apt-get install wireshark wireshark-dev tshark -qq;
    fi

  - if [ ${BUILD_STANDALONE} == "no" ]; then
      sudo apt-get install libglib2.0-dev libpcap-dev flex bison make qt-sdk qttools5-dev qttools5-dev-tools libgtk-3-dev -qq;
      sudo apt-get build-dep wireshark -qq;
      mkdir ${HOME}/wireshark-$WIRESHARK_BRANCH;
      cd ${HOME}/wireshark-$WIRESHARK_BRANCH;
      git init;
      git remote add -t $WIRESHARK_BRANCH -f origin https://github.com/wireshark/wireshark;
      git checkout $WIRESHARK_BRANCH;
      mkdir plugins/sap;
      cp -R $TRAVIS_BUILD_DIR/* plugins/sap/;
      git apply $TRAVIS_BUILD_DIR/wireshark-$WIRESHARK_BRANCH.patch;
    fi

  - sudo apt-get install libxml2-dev libxslt-dev python-dev -qq
  - sudo -H sh -c "CXX=g++ CC=gcc pip install pysap pyshark"

install:
  - if [ ${BUILD_STANDALONE} == "no" ]; then
      mkdir build && cd build && cmake .. && make plugins tshark sap;
      export PATH=${PATH}:${HOME}/wireshark-$WIRESHARK_BRANCH/build;
    fi

  - if [ ${BUILD_STANDALONE} == "yes" ]; then
      mkdir build && cd build && cmake .. && make && make install;
    fi

script: 
  - if [ ${BUILD_STANDALONE} == "no" ]; then
      python ${HOME}/wireshark-$WIRESHARK_BRANCH/plugins/sap/tests/__init__.py;
    fi
  - if [ ${BUILD_STANDALONE} == "yes" ]; then
      python ${TRAVIS_BUILD_DIR}/tests/__init__.py;
    fi
